library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4,div=2)
args(remainder)
submit()
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste(("Programming", "is", "fun!"))
paste("Programming", "is", "fun!")
submit()
telegram("Happy Birthday")
submit()
mad_libs("Las Vegas", adjective="sour", noun="smurf")
submit()
submit()
"I" %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
print(d1)
d1
as.Date("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
lapply
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x,mean)
rnorm
lm
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_chapes,range)
lapply(flag_shapes,range)
shape_mat=sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags[,1:30],unique)
unique_vals<-lapply(flags[nrow(flags),],unique)
unique_vals<-lapply(flags[1:nrow(flags),],unique)
unique_vals<-lapply(flags[,1:ncol(flags)],unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique
lapply(unique
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
libarary("swirl")
library("swirl")
swirl()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
libarary(datasets)
library(datasets)
data(iris)
?iris
sapply(iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,iris$virginica,mean)
iris
sp <- split(iris,iris$Species)
sp
lapply(sp, function(x) colMeans(x[, c("setosa", "versicolor", "virginica")]))
lapply(sp$virginica, function(x) colMeans(x[, c("Sepal.Length"))
lapply(sp$virginica, function(x) colMeans(x[, c("Sepal.Length")])
lapply(sp$virginica, function(x) colMeans(x[, c("Sepal.Length")]))
sapply(sp$virginica, function(x) colMeans(x[, c("Sepal.Length")]))
sapply(sp$virginica, function(x) colMeans(x))
mean(sp$virginica$Sepal.Length)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
sapply(mtcars, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
HPbyCyl<-tapply(mtcars$hp, mtcars$cyl, mean)
HPbyCyl[3]-HPbyCyl[1]
HPbyCyl[HPbyCyl$8]-HPbyCyl[HPbyCyl$4]
HPbyCyl[HPbyCyl$'8']-HPbyCyl[HPbyCyl$'4']
HPbyCyl['8']-HPbyCyl['4']
debug(ls)
ls()
setwd("~/ProgrammingAssignment2")
load(cachematrix.R)
source(cachematrix.R)
library(cachematrix.R)
source("cachematrix.R)
source("cachematrix.R")
library("cachematrix.R")
library(cachematrix)
